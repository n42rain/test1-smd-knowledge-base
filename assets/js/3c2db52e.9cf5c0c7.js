"use strict";(self.webpackChunksmd_knowledge_base=self.webpackChunksmd_knowledge_base||[]).push([[2248],{6542:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=s(5893),t=s(1151);const r={id:"Sprint Planning Process",title:"Sprint Planning Process",sidebar_label:"Sprint Planning Process"},l="What is the Sprint Planning Process",o={id:"guidelines-process/Sprint Planning Process",title:"Sprint Planning Process",description:"Background Context",source:"@site/docs/guidelines-process/what-is-the-sprint-process.md",sourceDirName:"guidelines-process",slug:"/guidelines-process/Sprint Planning Process",permalink:"/test1-smd-knowledge-base/docs/guidelines-process/Sprint Planning Process",draft:!1,unlisted:!1,editUrl:"https://github.com/n42rain/test1-smd-knowledge-base/tree/master/docs/guidelines-process/what-is-the-sprint-process.md",tags:[],version:"current",frontMatter:{id:"Sprint Planning Process",title:"Sprint Planning Process",sidebar_label:"Sprint Planning Process"},sidebar:"tutorialSidebar",previous:{title:"TRIAL TO UPDATE",permalink:"/test1-smd-knowledge-base/docs/guidelines-process/Folder Test 3/try"}},c={},d=[{value:"Background Context",id:"background-context",level:2},{value:"Steps",id:"steps",level:2},{value:"Backlog Grooming",id:"backlog-grooming",level:3},{value:"Sprint Planning",id:"sprint-planning",level:3},{value:"Sprint Development",id:"sprint-development",level:3},{value:"Sprint Changes",id:"sprint-changes",level:3}];function a(n){const e={h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",ul:"ul",...(0,t.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"what-is-the-sprint-planning-process",children:"What is the Sprint Planning Process"}),"\n",(0,i.jsx)(e.h2,{id:"background-context",children:"Background Context"}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"FSD is Functional Specification Document."}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"steps",children:"Steps"}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"backlog-grooming",children:"Backlog Grooming"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"once at the end of each sprint"}),"\n"]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Product Team prepares FSD"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"EM check if FSD is complete"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"non functional (prepared by EM)"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"storage, network, performance, security, availability, reliability, cost etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"functional (prepared by Product)"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"user requirements"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"EM to verify if system design requirement is needed."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"if need design then we need more time to design RFC (depends on scope)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"EM to discuss with devs on system design for each FSD and subtasks."}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"EM to decide sprint point with other developers during backlog grooming session (2-3 hours)."}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"EM to discuss with team on how much capacity we have for next sprint total."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"sprint-planning",children:"Sprint Planning"}),"\n",(0,i.jsxs)(e.ol,{start:"5",children:["\n",(0,i.jsx)(e.li,{children:"Sprint planning with product: EM with Product meet to decide which tickets to bring into sprint."}),"\n",(0,i.jsx)(e.li,{children:"Sprint planning with team: EM with Team to assign tasks."}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"sprint-development",children:"Sprint Development"}),"\n",(0,i.jsxs)(e.ol,{start:"6",children:["\n",(0,i.jsx)(e.li,{children:"Dev should only have 1 ticket in progress at a time."}),"\n",(0,i.jsx)(e.li,{children:"2nd week of sprint is reserved for development - meetings kept to a minimal."}),"\n",(0,i.jsx)(e.li,{children:"Start of 3rd week dev tasks should be completed and hand over to QA."}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"sprint-changes",children:"Sprint Changes"}),"\n",(0,i.jsxs)(e.ol,{start:"9",children:["\n",(0,i.jsx)(e.li,{children:"Any new adhoc tickets will assign to EM to see if need to change the Sprint deliverables."}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}},1151:(n,e,s)=>{s.d(e,{Z:()=>o,a:()=>l});var i=s(7294);const t={},r=i.createContext(t);function l(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);