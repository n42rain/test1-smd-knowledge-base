"use strict";(self.webpackChunksmd_knowledge_base=self.webpackChunksmd_knowledge_base||[]).push([[560],{4575:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=n(5893),s=n(1151);const i={id:"Support-issue-7",title:"Profit Report not Tally",sidebar_label:"Profit Report not Tally"},o="Profit Report not Tally",a={id:"support-issues/Support-issue-7",title:"Profit Report not Tally",description:"Background Context",source:"@site/docs/support-issues/profit-report-not-tally.md",sourceDirName:"support-issues",slug:"/support-issues/Support-issue-7",permalink:"/test1-smd-knowledge-base/docs/support-issues/Support-issue-7",draft:!1,unlisted:!1,editUrl:"https://github.com/n42rain/test1-smd-knowledge-base/tree/master/docs/support-issues/profit-report-not-tally.md",tags:[],version:"current",frontMatter:{id:"Support-issue-7",title:"Profit Report not Tally",sidebar_label:"Profit Report not Tally"},sidebar:"supportSidebar",previous:{title:"On Account Statement Not Tally With Credit Balance",permalink:"/test1-smd-knowledge-base/docs/support-issues/Support-issue-4"},next:{title:"Pump Test Not Recorded in HOS",permalink:"/test1-smd-knowledge-base/docs/support-issues/Support-issue-5"}},c={},d=[{value:"Background Context",id:"background-context",level:2},{value:"Example Ticket",id:"example-ticket",level:3},{value:"Possible Causes",id:"possible-causes",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Investigation Requirements",id:"investigation-requirements",level:3},{value:"To Resolve",id:"to-resolve",level:3},{value:"Investigation Steps",id:"investigation-steps",level:2},{value:"To Check After Migrate Activities",id:"to-check-after-migrate-activities",level:3},{value:"To Check After Migrate Profit (Part 1)",id:"to-check-after-migrate-profit-part-1",level:3},{value:"To Check After Migrate Profit (Part 2)",id:"to-check-after-migrate-profit-part-2",level:3},{value:"To Check if stock not reflect still after migrate profit",id:"to-check-if-stock-not-reflect-still-after-migrate-profit",level:3},{value:"To Check if there were undefined products in profit reports",id:"to-check-if-there-were-undefined-products-in-profit-reports",level:3}];function l(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"softwareSystem(s): HUB\r\ncontainer(s): \r\nclient(s): SENTINEL\n"})}),"\n",(0,r.jsx)(t.h1,{id:"profit-report-not-tally",children:"Profit Report not Tally"}),"\n",(0,r.jsx)(t.h2,{id:"background-context",children:"Background Context"}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.p,{children:"The inventory report has not tally data."}),"\n",(0,r.jsx)(t.h3,{id:"example-ticket",children:"Example Ticket"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"E-Service: 01851349/I-0432646 Profit report not tally - PS Bandar Sri Sendayan"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"possible-causes",children:"Possible Causes"}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"It is possible that some data has been deleted or lost, causing a mismatch between the profit report and sales category quantities."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"investigation-requirements",children:"Investigation Requirements"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Access to Inventory Report Database"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Access to Inventory Database"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"SSH access to the Inventory Report (can ask afifi to get the ip address of the inventory report) (invreport.sentinel.getslurp.com)"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"to-resolve",children:"To Resolve"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Create a new tmux session"}),": Use ",(0,r.jsx)(t.code,{children:"tmux new -t outletids_month_year"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Run the following command"}),":"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"php artisan migrate:activities franchise id(1) type (5) startId(usually 1) \u2014 oids=44 \u2014date=11,2023\r\n   php artisan migrate:activities 1 5 1 \u2014 oids=44 \u2014date=11,2023\n"})}),"\n",(0,r.jsx)(t.p,{children:"Upon successful execution, perform these checks:"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Check the 'activities' table from invreport"})," :"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-SQL",children:"SELECT COUNT(*)\r\nFROM `invreport`.`activities`\r\nWHERE outlet_id = 44\r\nAND franchise_id = 1\r\nAND committed_at = '2023-11-01 00:00:00'\r\nAND type = 5\r\nORDER BY `movement_product_id`\r\nLIMIT 300 OFFSET 0;\r\n\n"})}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Verify the 'stock_movement_product' table"})," in the inventory database:"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-SQL",children:"SELECT COUNT(*)\r\nFROM stock_movements\r\nJOIN stock_movement_products ON stock_movement_id = stock_movements.id\r\nWHERE franchise_id = 1\r\nAND outlet_id = 44\r\nAND type = 5\r\nAND settled_at = '2023-11-01 00:00:00'\r\nAND stock_movements.deleted_at IS NULL\r\nAND stock_movement_products.deleted_at IS NULL;\n"})}),"\n",(0,r.jsx)(t.p,{children:"To ensure data consistency for other types, cross-check the row count:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-SQL",children:"SELECT COUNT(*)\r\nFROM stock_movements\r\nJOIN stock_movement_products ON stock_movement_id = stock_movements.id\r\nWHERE franchise_id = 1\r\nAND outlet_id = 44\r\nAND type = 1\r\nAND settled_at BETWEEN '2023-11-01 00:00:00' AND '2023-11-30 23:59:59'\r\nAND stock_movements.deleted_at IS NULL\r\nAND stock_movement_products.deleted_at IS NULL;\n"})}),"\n",(0,r.jsx)(t.p,{children:"After data transfer completion, proceed with migrating profit data:"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Run"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"php artisan generate:profit 1 0 0 0 --startRange=11,2023 --endRange=11,2023 --oids=44\n"})}),"\n",(0,r.jsx)(t.p,{children:"or"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"php artisan generate:profit 1 44 11 2023\n"})}),"\n",(0,r.jsx)(t.p,{children:"This command refreshes the 'profit' table by deleting old data and inserting new data. Wait for completion and verify the profit report."}),"\n",(0,r.jsx)(t.p,{children:"If discrepancies persist with minimal differences:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Check inventory costs for negative quantities."})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"If the tally remains off, there might be missing data. Cross-check 'transactions' in the inventory with 'stock_transactions' in the inventory report:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"SELECT COUNT(*)\r\nFROM stock_transactions\r\nJOIN stocks ON stock_id = stocks.id\r\nWHERE franchise_id = 1\r\nAND outlet_id = 44\r\nAND deducted_at BETWEEN '2023-11-01 00:00:00' AND '2023-11-30 23:59:59'\r\nAND stock_transactions.deleted_at IS NULL;\r\n \r\nSELECT COUNT(*)\r\nFROM transactions\r\nWHERE outlet_id = 44\r\nAND franchise_id = 1\r\nAND transaction_at BETWEEN '2023-11-01 00:00:00' AND '2023-11-30 23:59:59'\r\nAND type = 1;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"investigation-steps",children:"Investigation Steps"}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"to-check-after-migrate-activities",children:"To Check After Migrate Activities"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Check the 'activities' table from invreport"}),":"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"SELECT COUNT(*)\r\nFROM `invreport`.`activities`\r\nWHERE outlet_id = 44\r\nAND franchise_id = 1\r\nAND committed_at = '2023-11-01 00:00:00'\r\nAND type = 5\r\nORDER BY `movement_product_id`\r\nLIMIT 300 OFFSET 0;\n"})}),"\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Verify the 'stock_movement_product' table"})," in the inventory database:"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"SELECT COUNT(*)\r\nFROM stock_movements\r\nJOIN stock_movement_products ON stock_movement_id = stock_movements.id\r\nWHERE franchise_id = 1\r\nAND outlet_id = 44\r\nAND type = 5\r\nAND settled_at = '2023-11-01 00:00:00'\r\nAND stock_movements.deleted_at IS NULL\r\nAND stock_movement_products.deleted_at IS NULL;\n"})}),"\n",(0,r.jsx)(t.p,{children:"To ensure data consistency for other types, cross-check the row count:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"SELECT COUNT(*)\r\nFROM stock_movements\r\nJOIN stock_movement_products ON stock_movement_id = stock_movements.id\r\nWHERE franchise_id = 1\r\nAND outlet_id = 44\r\nAND type = 1\r\nAND settled_at BETWEEN '2023-11-01 00:00:00' AND '2023-11-30 23:59:59'\r\nAND stock_movements.deleted_at IS NULL\r\nAND stock_movement_products.deleted_at IS NULL;\n"})}),"\n",(0,r.jsx)(t.h3,{id:"to-check-after-migrate-profit-part-1",children:"To Check After Migrate Profit (Part 1)"}),"\n",(0,r.jsx)(t.p,{children:"Check inventory costs for any negative quantities. If discrepancies persist, cross-verify 'transactions' in the inventory with 'stock_transactions' in the inventory report:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-SQL",children:"SELECT COUNT(*)\r\nFROM stock_transactions\r\nJOIN stocks ON stock_id = stocks.id\r\nWHERE franchise_id = 1\r\nAND outlet_id = 44\r\nAND deducted_at BETWEEN '2023-11-01 00:00:00' AND '2023-11-30 23:59:59'\r\nAND stock_transactions.deleted_at IS NULL;\r\n \r\nSELECT COUNT(*)\r\nFROM transactions\r\nWHERE outlet_id = 44\r\nAND franchise_id = 1\r\nAND transaction_at BETWEEN '2023-11-01 00:00:00' AND '2023-11-30 23:59:59'\r\nAND type = 1;\n"})}),"\n",(0,r.jsx)(t.h3,{id:"to-check-after-migrate-profit-part-2",children:"To Check After Migrate Profit (Part 2)"}),"\n",(0,r.jsx)(t.p,{children:"Check stock received to ensure stock movement data is consistent across inventory and inventory report databases."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-SQL",children:"SELECT COUNT(*)\r\nFROM `invreport`.`activities`\r\nWHERE outlet_id = 965\r\nAND franchise_id = 1\r\nAND committed_at >= '2023-08-01 00:00:00'\r\nAND committed_at <= '2023-08-31 23:59:59'\r\nAND type = 6\r\nORDER BY `movement_product_id`\r\nLIMIT 300 OFFSET 0;\r\n\r\nSELECT COUNT(*)\r\nFROM stock_movements\r\nJOIN stock_movement_products ON stock_movement_id = stock_movements.id\r\nWHERE franchise_id = 1\r\nAND outlet_id = 965\r\nAND type = 6\r\nAND settled_at BETWEEN '2023-08-01 00:00:00' AND '2023-08-31 23:59:59'\r\nAND stock_movements.deleted_at IS NULL\r\nAND stock_movement_products.deleted_at IS NULL;\n"})}),"\n",(0,r.jsx)(t.h3,{id:"to-check-if-stock-not-reflect-still-after-migrate-profit",children:"To Check if stock not reflect still after migrate profit"}),"\n",(0,r.jsx)(t.p,{children:"Run command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"php artisan migrate:stocks 1 \u2014oids=819 \u2014startId=latestID\n"})}),"\n",(0,r.jsx)(t.p,{children:"-> To synchronize stock with inventory ms"}),"\n",(0,r.jsx)(t.p,{children:"Run migrate profit again:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"php artisan generate:profit 1 0 0 0 --startRange=11,2023 --endRange=11,2023 --oids=44\n"})}),"\n",(0,r.jsx)(t.h3,{id:"to-check-if-there-were-undefined-products-in-profit-reports",children:"To Check if there were undefined products in profit reports"}),"\n",(0,r.jsx)(t.p,{children:"Resync 'product_tag' with 'tags':"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"# Migrate tags\r\nphp artisan migrate:tags 1\r\n\r\n# Migrate product tags\r\nphp artisan migrate:producttag 1\r\n\r\n# Migrate products\r\nphp artisan migrate:products 1\r\n\r\n# Migrate product spesific Id \r\nphp artisan migrate:products 1 --productId=1\n"})}),"\n",(0,r.jsx)(t.p,{children:"Then rerun migrate profit again:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"php artisan generate:profit 1 0 0 0 --startRange=11,2023 --endRange=11,2023 --oids=44\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var r=n(7294);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);